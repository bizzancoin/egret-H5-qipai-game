<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.idealighter.game.dao.manage.mapper.AdminPersistentLoginsMapper">
  <resultMap id="BaseResultMap" type="com.idealighter.game.dao.manage.po.AdminPersistentLogins">
    <id column="series" jdbcType="VARCHAR" property="series" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="last_used" jdbcType="TIMESTAMP" property="lastUsed" />
    <result column="platform" jdbcType="VARCHAR" property="platform" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    series, username, token, last_used, platform
  </sql>
  <select id="selectByExample" parameterType="com.idealighter.game.dao.manage.po.AdminPersistentLoginsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin_persistent_logins
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin_persistent_logins
    where series = #{series,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from admin_persistent_logins
    where series = #{series,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.idealighter.game.dao.manage.po.AdminPersistentLoginsExample">
    delete from admin_persistent_logins
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.idealighter.game.dao.manage.po.AdminPersistentLogins">
    insert into admin_persistent_logins (series, username, token, 
      last_used, platform)
    values (#{series,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, 
      #{lastUsed,jdbcType=TIMESTAMP}, #{platform,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.idealighter.game.dao.manage.po.AdminPersistentLogins">
    insert into admin_persistent_logins
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="series != null">
        series,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="lastUsed != null">
        last_used,
      </if>
      <if test="platform != null">
        platform,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="series != null">
        #{series,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="lastUsed != null">
        #{lastUsed,jdbcType=TIMESTAMP},
      </if>
      <if test="platform != null">
        #{platform,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.idealighter.game.dao.manage.po.AdminPersistentLoginsExample" resultType="java.lang.Long">
    select count(*) from admin_persistent_logins
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update admin_persistent_logins
    <set>
      <if test="record.series != null">
        series = #{record.series,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUsed != null">
        last_used = #{record.lastUsed,jdbcType=TIMESTAMP},
      </if>
      <if test="record.platform != null">
        platform = #{record.platform,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update admin_persistent_logins
    set series = #{record.series,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      token = #{record.token,jdbcType=VARCHAR},
      last_used = #{record.lastUsed,jdbcType=TIMESTAMP},
      platform = #{record.platform,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.idealighter.game.dao.manage.po.AdminPersistentLogins">
    update admin_persistent_logins
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="lastUsed != null">
        last_used = #{lastUsed,jdbcType=TIMESTAMP},
      </if>
      <if test="platform != null">
        platform = #{platform,jdbcType=VARCHAR},
      </if>
    </set>
    where series = #{series,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.idealighter.game.dao.manage.po.AdminPersistentLogins">
    update admin_persistent_logins
    set username = #{username,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      last_used = #{lastUsed,jdbcType=TIMESTAMP},
      platform = #{platform,jdbcType=VARCHAR}
    where series = #{series,jdbcType=VARCHAR}
  </update>
</mapper>